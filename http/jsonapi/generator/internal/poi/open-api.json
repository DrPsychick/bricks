{
  "openapi": "3.0.0",
  "info": {
    "title": "PACE POI API",
    "description": "POI API",
    "version": "0.0.1",
    "x-logo": {
      "url": "https://developer.pace.car/images/logo_black.svg"
    }
  },
  "servers": [
    {
      "url": "https://api.pace.cloud/poi"
    }
  ],
  "paths": {
    "/beta/meta": {
      "get": {
        "tags": [
          "Metadata Filters"
        ],
        "operationId": "GetMetadataFilters",
        "security": [
          {
            "OAuth2": [
              "poi:gas-stations:read"
            ]
          },
          {
            "OIDC": [
              "poi:gas-stations:read"
            ]
          }
        ],
        "summary": "Query for filterable values inside a radius",
        "description": "Returns filterable values around the current location on the map, within a certain radius.\nFor the latitude and longitude values used in the request, returns the available and unavailable values for the following fields:\n\n  * brand\n\n  * payment methods\n\n  * amenities\n",
        "parameters": [
          {
            "in": "query",
            "name": "latitude",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            },
            "required": true,
            "example": 44.41,
            "description": "Latitude in degrees"
          },
          {
            "in": "query",
            "name": "longitude",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "required": true,
            "example": 26.11,
            "description": "Longitude in degrees"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Categories"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/gas-stations": {
      "get": {
        "tags": [
          "Gas Stations"
        ],
        "operationId": "GetGasStations",
        "security": [
          {
            "OAuth2": [
              "poi:gas-stations:read",
              "poi:gas-stations.references:read"
            ]
          },
          {
            "OIDC": [
              "poi:gas-stations:read",
              "poi:gas-stations.references:read"
            ]
          }
        ],
        "summary": "Query for gas stations",
        "description": "There are two ways to search for gas stations in a geo location. You can use either one, or none, but not both ways.\n\nTo search inside a specific radius around a given longitude and latitude provide the following query parameters:\n\n* latitude\n* longitude\n* radius\n\nTo search inside a bounding box provide the following query parameter:\n\n* boundingBox\n",
        "parameters": [
          {
            "in": "query",
            "name": "page[number]",
            "schema": {
              "type": "integer"
            },
            "example": 1,
            "description": "page number"
          },
          {
            "in": "query",
            "name": "page[size]",
            "schema": {
              "type": "integer"
            },
            "example": 50,
            "description": "items per page"
          },
          {
            "in": "query",
            "name": "filter[poiType]",
            "schema": {
              "type": "string",
              "enum": [
                "gasStation"
              ]
            },
            "example": "gasStation",
            "description": "POI type you are searching for (in this case gas stations)"
          },
          {
            "in": "query",
            "name": "filter[appType]",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fueling"
                ]
              }
            },
            "description": "Search only gas stations with fueling app available",
            "example": [
              "fueling"
            ],
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "filter[latitude]",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -85,
              "maximum": 85
            },
            "required": false,
            "description": "Latitude in degrees",
            "example": 49.16
          },
          {
            "in": "query",
            "name": "filter[longitude]",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "required": false,
            "description": "Longitude in degrees",
            "example": 8.23
          },
          {
            "in": "query",
            "name": "filter[radius]",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": 0
            },
            "required": false,
            "description": "Radius in meters",
            "example": 5.4,
            "nullable": true
          },
          {
            "in": "query",
            "name": "filter[boundingBox]",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              },
              "minimum": -180,
              "maximum": 180
            },
            "required": false,
            "description": "Bounding box representing left, bottom, right, top in degrees. The query parameters need to be passed 4 times in exactly the order left, bottom, right, top.\n<table> <tr><th>#</th><th>Value</th><th>Lat/Long</th><th>Range</th></tr> <tr><td>0</td><td>left</td><td>Lat</td><td>[-180..180]</td></tr> <tr><td>1</td><td>bottom</td><td>Long</td><td>[-90..90]</td></tr> <tr><td>2</td><td>right</td><td>Lat</td><td>[-180..180]</td></tr> <tr><td>3</td><td>top</td><td>Long</td><td>[-90..90]</td></tr> </table>\n",
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "compile[openingHours]",
            "schema": {
              "type": "boolean",
              "enum": [
                true,
                false
              ],
              "nullable": true
            },
            "example": true,
            "description": "Reduces the opening hours rules. After compilation only rules with the action open will remain in the response."
          },
          {
            "in": "query",
            "name": "filter[source]",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "45dc7550-44b8-4bb5-82bd-149ee0c87e07",
            "required": false,
            "description": "Filter by source ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GasStations"
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/FuelPrice"
                          },
                          {
                            "$ref": "#/components/schemas/LocationBasedApp"
                          },
                          {
                            "$ref": "#/components/schemas/ReferenceStatus"
                          }
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "type": "gasStation",
                      "id": "b86b67e9-7fae-4500-8885-45c8032056cc",
                      "attributes": {
                        "latitude": 49.013,
                        "longitude": 8.425,
                        "stationName": "PACE Station",
                        "address": {
                          "street": "Haid-und-Neu-Str.",
                          "houseNo": "18",
                          "postalCode": "76131",
                          "city": "Karlsruhe",
                          "countryCode": "DE"
                        },
                        "contact": {
                          "firstName": "Max",
                          "lastName": "Mustermann",
                          "gender": "m",
                          "email": "max.mustermann@pace.de",
                          "phoneNumber": "+49-175-5559-722",
                          "faxNumber": "+49-175-5559-723"
                        },
                        "openingHours": {
                          "timezone": "+01:00",
                          "rules": [
                            {
                              "days": [
                                "monday",
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday"
                              ],
                              "timespans": [
                                {
                                  "from": "06:00",
                                  "to": "23:00"
                                }
                              ]
                            },
                            {
                              "days": [
                                "saturday"
                              ],
                              "timespans": [
                                {
                                  "from": "07:00",
                                  "to": "23:00"
                                }
                              ]
                            },
                            {
                              "days": [
                                "sunday"
                              ],
                              "timespans": [
                                {
                                  "from": "07:00",
                                  "to": "22:00"
                                }
                              ]
                            }
                          ]
                        },
                        "amenities": [
                          "toilet"
                        ],
                        "paymentMethods": [
                          "sepaDirectDebit"
                        ],
                        "priceFormat": "d.dds",
                        "references": [
                          "prn:psp:sites:010876234876238991"
                        ]
                      },
                      "relationships": {
                        "fuelPrices": {
                          "data": [
                            {
                              "type": "fuelPrice",
                              "id": "6b5bff6f-74e1-40a1-9da0-72305292d939"
                            },
                            {
                              "type": "fuelPrice",
                              "id": "f563e0ee-ba9a-4869-8fe7-42639fcf375d"
                            },
                            {
                              "type": "fuelPrice",
                              "id": "cb1afd35-f531-4606-abc8-e1cfbc1f96f5"
                            }
                          ]
                        },
                        "locationBasedApps": {
                          "data": [
                            {
                              "type": "locationBasedApp",
                              "id": "89a072d1-0255-4abb-b863-c463e4b78453"
                            }
                          ]
                        },
                        "referenceStatuses": {
                          "data": [
                            {
                              "type": "referenceStatus",
                              "id": "prn:psp:sites:010876234876238991"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "included": [
                    {
                      "type": "fuelPrice",
                      "id": "6b5bff6f-74e1-40a1-9da0-72305292d939",
                      "attributes": {
                        "fuelType": "ron95e5",
                        "price": 1.399,
                        "currency": "EUR",
                        "productName": "Super E5"
                      }
                    },
                    {
                      "type": "fuelPrice",
                      "id": "f563e0ee-ba9a-4869-8fe7-42639fcf375d",
                      "attributes": {
                        "fuelType": "ron95e10",
                        "price": 1.379,
                        "currency": "EUR",
                        "productName": "Super E10"
                      }
                    },
                    {
                      "type": "fuelPrice",
                      "id": "cb1afd35-f531-4606-abc8-e1cfbc1f96f5",
                      "attributes": {
                        "fuelType": "diesel",
                        "price": 1.239,
                        "currency": "EUR",
                        "productName": "Diesel"
                      }
                    },
                    {
                      "type": "locationBasedApp",
                      "id": "89a072d1-0255-4abb-b863-c463e4b78453",
                      "attributes": {
                        "appType": "fueling",
                        "title": "PACE Fueling App",
                        "subtitle": "Zahle bargeldlos mit der PACE Fueling App"
                      }
                    },
                    {
                      "type": "referenceStatus",
                      "id": "prn:psp:sites:010876234876238991",
                      "attributes": {
                        "status": "online"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/gas-stations/{id}": {
      "get": {
        "tags": [
          "Gas Stations"
        ],
        "operationId": "GetGasStation",
        "security": [
          {
            "OAuth2": [
              "poi:gas-stations:read",
              "poi:gas-stations.references:read"
            ]
          },
          {
            "OIDC": [
              "poi:gas-stations:read",
              "poi:gas-stations.references:read"
            ]
          }
        ],
        "summary": "Get a specific gas station",
        "description": "Returns an individual gas station\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "required": true,
            "description": "Gas station ID"
          },
          {
            "in": "query",
            "name": "compile[openingHours]",
            "schema": {
              "type": "boolean",
              "enum": [
                true,
                false
              ]
            },
            "example": true,
            "description": "Reduces the opening hours rules. After compilation, only rules with the action open will remain in the response."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Expires": {
                "description": "RFC 7234, section 5.3: Expires",
                "schema": {
                  "type": "string",
                  "example": "Wed, 21 Oct 2015 07:28:00 GMT"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GasStation"
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/FuelPrice"
                          },
                          {
                            "$ref": "#/components/schemas/LocationBasedApp"
                          },
                          {
                            "$ref": "#/components/schemas/ReferenceStatus"
                          }
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "type": "gasStation",
                    "id": "b86b67e9-7fae-4500-8885-45c8032056cc",
                    "attributes": {
                      "latitude": 49.013,
                      "longitude": 8.425,
                      "stationName": "PACE Station",
                      "address": {
                        "street": "Haid-und-Neu-Str.",
                        "houseNo": "18",
                        "postalCode": "76131",
                        "city": "Karlsruhe",
                        "countryCode": "DE"
                      },
                      "contact": {
                        "firstName": "Max",
                        "lastName": "Mustermann",
                        "gender": "m",
                        "email": "max.mustermann@pace.de",
                        "phoneNumber": "+49-175-5559-722",
                        "faxNumber": "+49-175-5559-723"
                      },
                      "openingHours": {
                        "timezone": "+01:00s",
                        "rules": [
                          {
                            "days": [
                              "monday",
                              "tuesday",
                              "wednesday",
                              "thursday",
                              "friday"
                            ],
                            "timespans": [
                              {
                                "from": "06:00",
                                "to": "23:00"
                              }
                            ]
                          },
                          {
                            "days": [
                              "saturday"
                            ],
                            "timespans": [
                              {
                                "from": "07:00",
                                "to": "23:00"
                              }
                            ]
                          },
                          {
                            "days": [
                              "sunday"
                            ],
                            "timespans": [
                              {
                                "from": "07:00",
                                "to": "22:00"
                              }
                            ]
                          }
                        ]
                      },
                      "amenities": [
                        "toilet"
                      ],
                      "paymentMethods": [
                        "sepaDirectDebit"
                      ],
                      "priceFormat": "d.dds",
                      "references": [
                        "prn:psp:sites:010876234876238991"
                      ]
                    },
                    "relationships": {
                      "fuelPrices": {
                        "data": [
                          {
                            "type": "fuelPrice",
                            "id": "6b5bff6f-74e1-40a1-9da0-72305292d939"
                          },
                          {
                            "type": "fuelPrice",
                            "id": "f563e0ee-ba9a-4869-8fe7-42639fcf375d"
                          },
                          {
                            "type": "fuelPrice",
                            "id": "cb1afd35-f531-4606-abc8-e1cfbc1f96f5"
                          }
                        ]
                      },
                      "locationBasedApps": {
                        "data": [
                          {
                            "type": "locationBasedApp",
                            "id": "89a072d1-0255-4abb-b863-c463e4b78453"
                          }
                        ]
                      },
                      "referenceStatuses": {
                        "data": [
                          {
                            "type": "referenceStatus",
                            "id": "prn:psp:sites:010876234876238991"
                          }
                        ]
                      },
                      "successorOf": {
                        "data": [
                          {
                            "type": "gasStation",
                            "id": "b86b67e9-7fae-4500-8885-45c8032056cc"
                          },
                          {
                            "type": "gasStation",
                            "id": "a124aa35-8b67-2500-1113-45c8036789aa"
                          }
                        ]
                      }
                    }
                  },
                  "included": [
                    {
                      "type": "fuelPrice",
                      "id": "6b5bff6f-74e1-40a1-9da0-72305292d939",
                      "attributes": {
                        "fuelType": "ron95e5",
                        "fuelAmountUnit": "Ltr",
                        "price": 1.399,
                        "currency": "EUR",
                        "productName": "Super E5"
                      }
                    },
                    {
                      "type": "fuelPrice",
                      "id": "f563e0ee-ba9a-4869-8fe7-42639fcf375d",
                      "attributes": {
                        "fuelType": "ron95e10",
                        "fuelAmountUnit": "Ltr",
                        "price": 1.379,
                        "currency": "EUR",
                        "productName": "Super E10"
                      }
                    },
                    {
                      "type": "fuelPrice",
                      "id": "cb1afd35-f531-4606-abc8-e1cfbc1f96f5",
                      "attributes": {
                        "fuelType": "diesel",
                        "fuelAmountUnit": "Ltr",
                        "price": 1.239,
                        "currency": "EUR",
                        "productName": "Diesel"
                      }
                    },
                    {
                      "type": "locationBasedApp",
                      "id": "89a072d1-0255-4abb-b863-c463e4b78453",
                      "attributes": {
                        "appType": "fueling",
                        "title": "PACE Fueling App",
                        "subtitle": "Zahle bargeldlos mit der PACE Fueling App"
                      }
                    },
                    {
                      "type": "referenceStatus",
                      "id": "prn:psp:sites:010876234876238991",
                      "attributes": {
                        "status": "online"
                      }
                    }
                  ]
                }
              }
            }
          },
          "301": {
            "$ref": "#/components/responses/MovedPermanently"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "410": {
            "$ref": "#/components/responses/Expired"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/gas-stations/{id}/fueltype": {
      "get": {
        "tags": [
          "Gas Stations"
        ],
        "operationId": "GetGasStationFuelTypeNameMapping",
        "security": [
          {
            "OAuth2": [
              "poi:gas-stations:read"
            ]
          },
          {
            "OIDC": [
              "poi:gas-stations:read"
            ]
          }
        ],
        "summary": "Get a mapping from gas station specific fuel product name mapped to a normalized fuel type",
        "description": "Every gas station potential has different names for the same fuel types. This endpoint accepts the gas station's specific name and return a mapping where the specific name is mapped to a normalized version which should be globally the same across gas stations.\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "required": true,
            "description": "Gas station ID"
          },
          {
            "in": "query",
            "name": "filter[productName]",
            "schema": {
              "type": "string"
            },
            "example": "Super Plus",
            "required": true,
            "description": "Product Name"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FuelType"
                    }
                  }
                },
                "example": {
                  "data": {
                    "id": "7f558f59-b47b-4527-b9ed-b22749a51451",
                    "type": "fuelType",
                    "attributes": {
                      "productName": "Super Plus",
                      "fuelType": "ron98e5"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/gas-stations/{id}/fuel-price-histories/{fuel_type}": {
      "get": {
        "tags": [
          "Price Histories"
        ],
        "operationId": "GetPriceHistory",
        "security": [
          {
            "OAuth2": [
              "poi:gas-stations:read"
            ]
          }
        ],
        "summary": "Get price history for a specific gas station",
        "description": "Get the price history for a specific gas station and fuel type on a period of time which can begin no sooner than 37 days ago; the time interval between price changes can be set to minute, hour, day, week, month or year\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "required": true,
            "description": "Gas station ID"
          },
          {
            "in": "path",
            "name": "fuel_type",
            "schema": {
              "$ref": "#/components/schemas/Fuel"
            },
            "required": false,
            "description": "Filter after a specific fuel type"
          },
          {
            "in": "query",
            "name": "filter[from]",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filters data from the given point in time",
            "example": "2018-01-01T00:00:00"
          },
          {
            "in": "query",
            "name": "filter[to]",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filters data to the given point in time",
            "example": "2018-01-01T00:00:00"
          },
          {
            "in": "query",
            "name": "filter[granularity]",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Base time interval between price changes",
            "example": "minute"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PriceHistory"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/subscriptions": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "GetSubscriptions",
        "security": [
          {
            "OAuth2": [
              "poi:subscriptions:read"
            ]
          },
          {
            "OIDC": [
              "poi:subscriptions:read"
            ]
          },
          {
            "DeviceID": []
          }
        ],
        "summary": "Get the list of POI subscriptions for the user or device\n",
        "description": "Returns a list of all current (not expired) subscriptions of the user.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Subscription"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Subscription"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          }
        }
      }
    },
    "/beta/subscriptions/{id}": {
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "StoreSubscription",
        "security": [
          {
            "OAuth2": [
              "poi:subscriptions:create"
            ]
          },
          {
            "OIDC": [
              "poi:subscriptions:create"
            ]
          },
          {
            "DeviceID": []
          }
        ],
        "summary": "Stores a POI subscription\n",
        "description": "Stores a POI subscription to send a push notification to the device with the specified `pushToken` once one of the pois change based on the change condition. The notification contains (max 4kb)\n```\n{\n  \"target\": \"...\"\n  \"subscription\": \"706087b4-8bca-4db9-b037-8a7ff4ce5633\",\n  \"poi\": {\n    \"id\": \"4d6dd9db-b0ac-40e8-a099-b606cace6f72\", # poi ID\n    \"type\": \"gasStation\",\n    \"attributes\": {\n      # ... more data of the type\n    }\n  }\n}\n```\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Subscription"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stored",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Subscription"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "DeleteSubscription",
        "security": [
          {
            "OAuth2": [
              "poi:subscriptions:delete"
            ]
          },
          {
            "OIDC": [
              "poi:subscriptions:delete"
            ]
          },
          {
            "DeviceID": []
          }
        ],
        "summary": "Deletes a previously created POI subscription\n",
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/tiles/query": {
      "post": {
        "tags": [
          "Tiles"
        ],
        "operationId": "GetTiles",
        "security": [
          {
            "OAuth2": [
              "poi:tiles:read"
            ]
          },
          {
            "OIDC": [
              "poi:tiles:read"
            ]
          }
        ],
        "summary": "Query for tiles\n",
        "description": "Get a list of map tiles in the Protobuf binary wire format.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/protobuf": {
              "schema": {
                "type": "string",
                "format": "binary",
                "description": "Protobuf binary wire format of the following definition\n```\nsyntax = \"proto3\";\n\nmessage TileQueryRequest {\n  uint32 zoom = 1;\n  repeated AreaQuery areas = 2;\n  repeated IndividualTileQuery tiles = 3;\n}\n\nmessage AreaQuery {\n  // if NE(1,1) + SW(1,1) == { tile(1,1) }\n  // if NE(2,1) + SW(1,2) == { tile(1,1), tile(2,1), tile(1,2), tile(2,2) }\n  Coordinate north_east = 1;\n  Coordinate south_west = 2;\n  uint64 invalidation_token = 3; // e.g. timestamp or sequence number\n}\n\nmessage IndividualTileQuery {\n  Coordinate geo = 1;\n  uint64 invalidation_token = 3; // e.g. timestamp or sequence number\n}\n\nmessage Coordinate {\n  uint32 x = 1; // tile coordinate\n  uint32 y = 2; // tile coordinate\n}\n```\n",
                "x-protobuf-definition": {
                  "version": "proto3",
                  "messages": {
                    "TileQueryRequest": {
                      "fields": {
                        "zoom": {
                          "field-type": "uint32",
                          "field-number": 1
                        },
                        "areas": {
                          "field-type": "AreaQuery",
                          "field-number": 2,
                          "field-rule": "repeated"
                        },
                        "tiles": {
                          "field-type": "IndividualTileQuery",
                          "field-number": 3,
                          "field-rule": "repeated"
                        }
                      }
                    },
                    "AreaQuery": {
                      "fields": {
                        "north_east": {
                          "field-type": "Coordinate",
                          "field-number": 1
                        },
                        "south_west": {
                          "field-type": "Coordinate",
                          "field-number": 2
                        },
                        "invalidation_token": {
                          "field-type": "uint64",
                          "field-number": 3
                        }
                      }
                    },
                    "IndividualTileQuery": {
                      "fields": {
                        "geo": {
                          "field-type": "Coordinate",
                          "field-number": 1
                        },
                        "invalidation_token": {
                          "field-type": "uint64",
                          "field-number": 3
                        }
                      }
                    },
                    "Coordinate": {
                      "fields": {
                        "x": {
                          "field-type": "uint32",
                          "field-number": 1
                        },
                        "y": {
                          "field-type": "uint32",
                          "field-number": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/protobuf": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "description": "Protobuf binary wire format of the following definition\n```\nsyntax = \"proto3\";\n\nmessage TileQueryResponse {\n  uint32 zoom = 1;\n  repeated VectorTile vector_tiles = 2;\n  uint64 invalidation_token = 3;              // e.g. timestamp or sequence number\n  repeated Coordinate unavailable_tiles = 4;  // tile(s) couldn't be generated due to server issues\n}\n\nmessage VectorTile {\n  Coordinate geo = 1;\n  bytes vector_tiles = 3;\n}\n\nmessage Coordinate {\n  uint32 x = 1; // tile coordinate\n  uint32 y = 2; // tile coordinate\n}\n\n```\n",
                  "x-protobuf-definition": {
                    "version": "proto3",
                    "messages": {
                      "TileQueryResponse": {
                        "fields": {
                          "zoom": {
                            "field-type": "uint32",
                            "field-number": 1
                          },
                          "vector_tiles": {
                            "field-type": "VectorTile",
                            "field-number": 2,
                            "field-rule": "repeated"
                          },
                          "invalidation_token": {
                            "field-type": "uint64",
                            "field-number": 3
                          },
                          "unavailable_tiles": {
                            "field-type": "Coordinate",
                            "field-number": 4,
                            "field-rule": "repeated"
                          }
                        }
                      },
                      "VectorTile": {
                        "geo": {
                          "field-type": "Coordinate",
                          "field-number": 1
                        },
                        "vector_tiles": {
                          "field-type": "bytes",
                          "field-number": 3
                        }
                      },
                      "Coordinate": {
                        "fields": {
                          "x": {
                            "field-type": "uint32",
                            "field-number": 1
                          },
                          "y": {
                            "field-type": "uint32",
                            "field-number": 2
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/sources": {
      "post": {
        "tags": [
          "Sources"
        ],
        "operationId": "CreateSource",
        "security": [
          {
            "OAuth2": [
              "poi:sources:create"
            ]
          },
          {
            "OIDC": [
              "poi:sources:create"
            ]
          }
        ],
        "summary": "Creates a new source",
        "description": "Creates a new source",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Source"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Source"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "get": {
        "tags": [
          "Sources"
        ],
        "operationId": "GetSources",
        "security": [
          {
            "OAuth2": [
              "poi:sources:read"
            ]
          },
          {
            "OIDC": [
              "poi:sources:read"
            ]
          }
        ],
        "summary": "Returns a paginated list of sources",
        "description": "Returns a paginated list of sources optionally filtered by poi type and/or name",
        "parameters": [
          {
            "in": "query",
            "name": "page[number]",
            "schema": {
              "type": "integer"
            },
            "example": 1,
            "description": "page number"
          },
          {
            "in": "query",
            "name": "page[size]",
            "schema": {
              "type": "integer"
            },
            "example": 50,
            "description": "items per page"
          },
          {
            "in": "query",
            "name": "filter[poiType]",
            "schema": {
              "$ref": "#/components/schemas/POIType"
            },
            "description": "Filter for poi type, no filter returns all types"
          },
          {
            "in": "query",
            "name": "filter[name]",
            "schema": {
              "type": "string"
            },
            "description": "Filter for all sources with given source name"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Sources"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/sources/{sourceId}": {
      "put": {
        "tags": [
          "Sources"
        ],
        "operationId": "UpdateSource",
        "security": [
          {
            "OAuth2": [
              "poi:sources:update"
            ]
          },
          {
            "OIDC": [
              "poi:sources:update"
            ]
          }
        ],
        "summary": "Updates source with specified id",
        "description": "Updates source with specified id",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "description": "ID of the source"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Source"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Source"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "get": {
        "tags": [
          "Sources"
        ],
        "operationId": "GetSource",
        "security": [
          {
            "OAuth2": [
              "poi:sources:read"
            ]
          },
          {
            "OIDC": [
              "poi:sources:read"
            ]
          }
        ],
        "summary": "Returns source with specified id",
        "description": "Returns source with specified id",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "description": "ID of the source"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Source"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Sources"
        ],
        "operationId": "DeleteSource",
        "security": [
          {
            "OAuth2": [
              "poi:sources:delete"
            ]
          },
          {
            "OIDC": [
              "poi:sources:delete"
            ]
          }
        ],
        "summary": "Deletes source with specified id",
        "description": "Deletes source with specified id",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "description": "ID of the source"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/policies": {
      "get": {
        "tags": [
          "Policies"
        ],
        "operationId": "GetPolicies",
        "security": [
          {
            "OAuth2": [
              "poi:policies:read"
            ]
          },
          {
            "OIDC": [
              "poi:policies:read"
            ]
          }
        ],
        "summary": "Returns a paginated list of policies",
        "description": "Returns a paginated list of policies optionally filtered by poi type and/or country id and/or user id",
        "parameters": [
          {
            "in": "query",
            "name": "page[number]",
            "schema": {
              "type": "integer"
            },
            "example": 1,
            "description": "page number"
          },
          {
            "in": "query",
            "name": "page[size]",
            "schema": {
              "type": "integer"
            },
            "example": 50,
            "description": "items per page"
          },
          {
            "in": "query",
            "name": "filter[poiType]",
            "schema": {
              "$ref": "#/components/schemas/POIType"
            },
            "description": "Filter for poi type, no filter returns all types"
          },
          {
            "in": "query",
            "name": "filter[countryId]",
            "schema": {
              "type": "string"
            },
            "example": "de",
            "description": "Filter for all policies for the given country"
          },
          {
            "in": "query",
            "name": "filter[userId]",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "description": "Filter for all policies created by the given user"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Policies"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Policies"
        ],
        "operationId": "CreatePolicy",
        "security": [
          {
            "OAuth2": [
              "poi:policies:create"
            ]
          },
          {
            "OIDC": [
              "poi:policies:create"
            ]
          }
        ],
        "summary": "Creates a new policy",
        "description": "Creates a new policy",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Policy"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Policy"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/policies/{policyId}": {
      "get": {
        "tags": [
          "Policies"
        ],
        "operationId": "GetPolicy",
        "security": [
          {
            "OAuth2": [
              "poi:policies:read"
            ]
          },
          {
            "OIDC": [
              "poi:policies:read"
            ]
          }
        ],
        "summary": "Returns policy with specified id",
        "description": "Returns policy with specified id",
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "description": "ID of the policy"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Policy"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "operationId": "GetEvents",
        "security": [
          {
            "OAuth2": [
              "poi:events:read"
            ]
          },
          {
            "OIDC": [
              "poi:events:read"
            ]
          }
        ],
        "summary": "Returns a list of events",
        "description": "Returns a list of events optionally filtered by poi type and/or country id and/or user id",
        "parameters": [
          {
            "in": "query",
            "name": "page[number]",
            "schema": {
              "type": "integer"
            },
            "example": 1,
            "description": "page number"
          },
          {
            "in": "query",
            "name": "page[size]",
            "schema": {
              "type": "integer"
            },
            "example": 50,
            "description": "items per page"
          },
          {
            "in": "query",
            "name": "filter[sourceId]",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "description": "Filter for all events from given source id"
          },
          {
            "in": "query",
            "name": "filter[userId]",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "description": "Filter for all events for the changes made by a given user"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Events"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/pois": {
      "get": {
        "tags": [
          "POI"
        ],
        "operationId": "GetPois",
        "security": [
          {
            "OAuth2": [
              "poi:pois:read",
              "poi:pois.references:read"
            ]
          },
          {
            "OIDC": [
              "poi:pois:read",
              "poi:pois.references:read"
            ]
          }
        ],
        "summary": "Returns a paginated list of POIs",
        "description": "Returns a paginated list of POIs optionally filtered by type, appId and/or query",
        "parameters": [
          {
            "in": "query",
            "name": "page[number]",
            "schema": {
              "type": "integer"
            },
            "example": 1,
            "description": "page number"
          },
          {
            "in": "query",
            "name": "page[size]",
            "schema": {
              "type": "integer"
            },
            "example": 50,
            "description": "items per page"
          },
          {
            "in": "query",
            "name": "filter[poiType]",
            "schema": {
              "$ref": "#/components/schemas/POIType"
            },
            "description": "Filter for poi type, no filter returns all types"
          },
          {
            "in": "query",
            "name": "filter[appId]",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "description": "Filter id for app id, no filter returns pois for all apps"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/POIs"
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ReferenceStatus"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/pois/{poiId}": {
      "get": {
        "tags": [
          "POI"
        ],
        "operationId": "GetPoi",
        "security": [
          {
            "OAuth2": [
              "poi:pois:read",
              "poi:pois.references:read"
            ]
          },
          {
            "OIDC": [
              "poi:pois:read",
              "poi:pois.references:read"
            ]
          }
        ],
        "summary": "Returns POI with specified id",
        "description": "Returns POI with specified id",
        "parameters": [
          {
            "in": "path",
            "name": "poiId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "description": "ID of the POI"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Expires": {
                "description": "RFC 7234, section 5.3: Expires",
                "schema": {
                  "type": "string",
                  "example": "Wed, 21 Oct 2015 07:28:00 GMT"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/POI"
                    },
                    "included": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ReferenceStatus"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "301": {
            "$ref": "#/components/responses/MovedPermanently"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "410": {
            "$ref": "#/components/responses/Expired"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "patch": {
        "tags": [
          "POI"
        ],
        "operationId": "ChangePoi",
        "security": [
          {
            "OAuth2": [
              "poi:pois:update"
            ]
          },
          {
            "OIDC": [
              "poi:pois:update"
            ]
          }
        ],
        "summary": "Updates POI with specified id (only passed attributes will be updated)",
        "description": "Returns POI with specified id (only passed attributes will be updated)",
        "parameters": [
          {
            "in": "path",
            "name": "poiId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "description": "ID of the POI"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/POI"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/POI"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/apps/query": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "CheckForPaceApp",
        "security": [
          {
            "OAuth2": [
              "poi:apps:read"
            ]
          },
          {
            "OIDC": [
              "poi:apps:read"
            ]
          }
        ],
        "summary": "Query for location-based apps\n",
        "description": "These location-based PACE apps deliver additional services for PACE customers based on their current position.\nYou can (or should) trigger this whenever:\n* A longer stand-still is detected\n* The engine is turned off\n* Every 5 seconds if the user \"left the road\"\n\nPlease note that calling this API is very cheap and can be done regularly.\n",
        "parameters": [
          {
            "in": "query",
            "name": "filter[latitude]",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "required": true,
            "description": "Latitude",
            "example": 48.123
          },
          {
            "in": "query",
            "name": "filter[longitude]",
            "schema": {
              "type": "number",
              "format": "float"
            },
            "required": true,
            "description": "Longitude",
            "example": 9.456
          },
          {
            "in": "query",
            "name": "filter[appType]",
            "schema": {
              "type": "string",
              "enum": [
                "fueling"
              ]
            },
            "description": "Type of location-based app"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LocationBasedAppsWithRefs"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/apps": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "GetApps",
        "security": [
          {
            "OAuth2": [
              "poi:apps:read"
            ]
          },
          {
            "OIDC": [
              "poi:apps:read"
            ]
          }
        ],
        "summary": "Returns a paginated list of apps",
        "description": "Returns a paginated list of apps optionally filtered by type and/or query.\n",
        "parameters": [
          {
            "in": "query",
            "name": "page[number]",
            "schema": {
              "type": "integer"
            },
            "example": 1,
            "description": "page number"
          },
          {
            "in": "query",
            "name": "page[size]",
            "schema": {
              "type": "integer"
            },
            "example": 50,
            "description": "items per page"
          },
          {
            "in": "query",
            "name": "filter[appType]",
            "schema": {
              "type": "string",
              "enum": [
                "fueling"
              ]
            },
            "description": "Filter for poi type, no filter returns all types"
          },
          {
            "in": "query",
            "description": "Filters the location-based app by its caching method.\n",
            "name": "filter[cache]",
            "schema": {
              "type": "string",
              "enum": [
                "preload",
                "approaching"
              ]
            }
          },
          {
            "in": "query",
            "name": "filter[since]",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filters location-based apps that were changed (created/updated/deleted) since the given point in time",
            "example": "2018-01-01T00:00:00"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LocationBasedApps"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "operationId": "CreateApp",
        "security": [
          {
            "OAuth2": [
              "poi:apps:create"
            ]
          },
          {
            "OIDC": [
              "poi:apps:create"
            ]
          }
        ],
        "summary": "Creates a new application",
        "description": "Creates a new application",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/LocationBasedApp"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LocationBasedApp"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/apps/{appID}": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "GetApp",
        "security": [
          {
            "OAuth2": [
              "poi:apps:read"
            ]
          },
          {
            "OIDC": [
              "poi:apps:read"
            ]
          }
        ],
        "summary": "Returns App with specified id",
        "description": "Returns App with specified id.\nIn case the query returns a `404` (`Not Found`) the app was deleted and should be deleted from any caches.\n",
        "parameters": [
          {
            "in": "path",
            "name": "appID",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "description": "ID of the App"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LocationBasedApp"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Apps"
        ],
        "operationId": "UpdateApp",
        "security": [
          {
            "OAuth2": [
              "poi:apps:update"
            ]
          },
          {
            "OIDC": [
              "poi:apps:update"
            ]
          }
        ],
        "summary": "Updates App with specified id",
        "description": "Updates App with specified id",
        "parameters": [
          {
            "in": "path",
            "name": "appID",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "description": "ID of the App"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/LocationBasedApp"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LocationBasedApp"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Apps"
        ],
        "operationId": "DeleteApp",
        "security": [
          {
            "OAuth2": [
              "poi:apps:delete"
            ]
          },
          {
            "OIDC": [
              "poi:apps:delete"
            ]
          }
        ],
        "summary": "Deletes App with specified id",
        "description": "Deletes App with specified id",
        "parameters": [
          {
            "in": "path",
            "name": "appID",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "description": "ID of the App"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/apps/{appID}/relationships/pois": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "GetAppPOIsRelationships",
        "security": [
          {
            "OAuth2": [
              "poi:apps:read"
            ]
          },
          {
            "OIDC": [
              "poi:apps:read"
            ]
          }
        ],
        "summary": "Returns all POI relations for specified app id",
        "description": "Returns all POI relations for specified app id",
        "parameters": [
          {
            "in": "path",
            "name": "appID",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "description": "ID of the App"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPOIsRelationships"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "patch": {
        "tags": [
          "Apps"
        ],
        "operationId": "UpdateAppPOIsRelationships",
        "security": [
          {
            "OAuth2": [
              "poi:apps:update"
            ]
          },
          {
            "OIDC": [
              "poi:apps:update"
            ]
          }
        ],
        "summary": "Update all POI relations for specified app id",
        "description": "Update all POI relations for specified app id",
        "parameters": [
          {
            "in": "path",
            "name": "appID",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "description": "ID of the App"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/AppPOIsRelationships"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPOIsRelationships"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/datadumps/pois": {
      "get": {
        "tags": [
          "Data Dumps"
        ],
        "operationId": "GetPoisDump",
        "security": [
          {
            "OAuth2": [
              "poi:dumps:pois"
            ]
          },
          {
            "OIDC": [
              "poi:dumps:pois"
            ]
          }
        ],
        "summary": "Create a full POI dump\n",
        "parameters": [
          {
            "in": "header",
            "name": "Accept",
            "schema": {
              "type": "string",
              "enum": [
                "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
              ]
            },
            "required": true
          }
        ],
        "description": "Dump all POI data in XLSX format, along with full amenities.\n",
        "responses": {
          "200": {
            "description": "XLSX POI Report",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/datadumps/duplicatemap/{countryCode}": {
      "get": {
        "tags": [
          "Data Dumps"
        ],
        "operationId": "GetDuplicatesKML",
        "security": [
          {
            "OAuth2": [
              "poi:dumps:duplicatemap"
            ]
          },
          {
            "OIDC": [
              "poi:dumps:duplicatemap"
            ]
          }
        ],
        "summary": "Duplicate Map for country (KML)",
        "description": "Generates a map of potential gas station duplicates (closer than 50m to eachother) for specified country.",
        "parameters": [
          {
            "in": "path",
            "name": "countryCode",
            "schema": {
              "type": "string"
            },
            "example": "DE",
            "description": "Country code in ISO 3166-1 alpha-2 format"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.google-earth.kml+xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/delivery/gas-stations/{gasStationId}/reference-status/{reference}": {
      "put": {
        "tags": [
          "Delivery"
        ],
        "operationId": "PutGasStationReferenceStatus",
        "security": [
          {
            "OAuth2": [
              "poi:gas-stations.references:update"
            ]
          },
          {
            "OIDC": [
              "poi:gas-stations.references:update"
            ]
          }
        ],
        "summary": "Creates or updates a reference status of a gas station",
        "description": "Creates or updates a reference status of a gas station",
        "parameters": [
          {
            "in": "path",
            "name": "gasStationId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "required": true,
            "description": "Gas station ID"
          },
          {
            "in": "path",
            "name": "reference",
            "schema": {
              "type": "string"
            },
            "example": "prn:psp:sites:010876234876238991",
            "required": true,
            "description": "Service Provider PRN"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ReferenceStatus"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Delivery"
        ],
        "operationId": "DeleteGasStationReferenceStatus",
        "security": [
          {
            "OAuth2": [
              "poi:gas-stations.references:update"
            ]
          },
          {
            "OIDC": [
              "poi:gas-stations.references:update"
            ]
          }
        ],
        "summary": "Deletes a reference status of a gas station",
        "description": "Deletes a reference status of a gas station",
        "parameters": [
          {
            "in": "path",
            "name": "gasStationId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "be83d-a68d-41e3-9467-eb60442ff27b",
            "required": true,
            "description": "Gas station ID"
          },
          {
            "in": "path",
            "name": "reference",
            "schema": {
              "type": "string"
            },
            "example": "prn:psp:sites:010876234876238991",
            "required": true,
            "description": "Service Provider PRN"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/prices/regional": {
      "get": {
        "tags": [
          "Prices"
        ],
        "operationId": "GetRegionalPrices",
        "summary": "Search for regional prices in the area",
        "description": "Search for regional prices in the area centered at input latitude/longitude. Lower/Upper limits are set for each fuel type returned.\n",
        "parameters": [
          {
            "in": "query",
            "name": "filter[latitude]",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -85,
              "maximum": 85
            },
            "required": true,
            "description": "Latitude in degrees",
            "example": 49.16
          },
          {
            "in": "query",
            "name": "filter[longitude]",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            },
            "required": true,
            "description": "Longitude in degrees",
            "example": 8.23
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RegionalPrices"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/admin/poi/dedupe": {
      "patch": {
        "tags": [
          "Admin"
        ],
        "operationId": "DeduplicatePoi",
        "security": [
          {
            "OAuth2": [
              "poi:pois:update"
            ]
          },
          {
            "OIDC": [
              "poi:pois:update"
            ]
          }
        ],
        "summary": "Specify if a list of POI are considered to be duplicates of a specific POI",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DedupeRequest"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/beta/admin/poi/move": {
      "patch": {
        "tags": [
          "Admin"
        ],
        "operationId": "MovePoiAtPosition",
        "security": [
          {
            "OAuth2": [
              "poi:pois:update"
            ]
          },
          {
            "OIDC": [
              "poi:pois:update"
            ]
          }
        ],
        "summary": "Allows an admin to move a POI identified by its ID to a specific position",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MoveRequest"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "406": {
            "$ref": "#/components/responses/NotAcceptable"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PriceHistory": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "priceHistory"
            ]
          },
          "id": {
            "type": "string",
            "description": "Fuel Type",
            "example": "ron95e5"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "format": "date-time",
                "example": "2018-01-01T00:00:00",
                "description": "Beginning of time interval"
              },
              "to": {
                "type": "string",
                "format": "date-time",
                "example": "2018-01-01T00:00:00",
                "description": "End of time interval"
              },
              "productName": {
                "type": "string",
                "example": "Super E5"
              },
              "currency": {
                "$ref": "#/components/schemas/currency"
              },
              "fuelPrices": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2018-01-01T00:00:00",
                      "description": "The datetime of the price value"
                    },
                    "price": {
                      "type": "number",
                      "format": "decimal",
                      "example": 1.449,
                      "description": "The price at this point in time",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscription"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "POI Subscription ID",
            "example": "706087b4-8bca-4db9-b037-8a7ff4ce5633"
          },
          "attributes": {
            "type": "object",
            "required": [
              "observedPois",
              "pushToken"
            ],
            "properties": {
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "Time of subscription creation (iso8601 without time zone)",
                "example": "2018-01-01T00:00:00"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "Time of LocationBasedApp last update (iso8601 without time zone)",
                "example": "2018-06-01T00:00:00"
              },
              "expiresAt": {
                "type": "string",
                "format": "date-time",
                "description": "Time when the subscription will expire, must not be more then 60 days in the future (iso8601 without time zone)",
                "example": "2018-06-30T00:00:00"
              },
              "observedPois": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "example": [
                  "prn:pos:gas-stations:4d6dd9db-b0ac-40e8-a099-b606cace6f72",
                  "prn:pos:gas-stations:9536bb4a-6623-4b96-9bed-655f30c5b5cf",
                  "prn:pos:gas-stations:f0fca287-94f7-47f7-8f5a-0fea0dccfaa6"
                ]
              },
              "conditions": {
                "type": "object",
                "description": "Optional conditions to reduce the number of notifications to the device. For a notification to be fired, all conditions need to be true.\nThe example reads as `fuelPrice < 1.3 && fuelType == \"diesel\"`. For or conditions use multiple subscriptions.\n",
                "properties": {
                  "fuelPrice": {
                    "type": "object",
                    "description": "Condition on the fuelPrice of a gas station.",
                    "properties": {
                      "lt": {
                        "type": "number",
                        "description": "Fuel price is less then given amount. Amount is always given in the currency of the gas station. The units are not scaled, for `EUR`, the value 1.3 means 1 euro and 30 cents.\n",
                        "example": 1.3
                      }
                    }
                  },
                  "fuelType": {
                    "type": "object",
                    "description": "Condition on the fuelType of a gas station",
                    "properties": {
                      "eq": {
                        "type": "string",
                        "description": "Fuel type is equal to given value",
                        "example": "diesel",
                        "enum": [
                          "ron98",
                          "ron98e5",
                          "ron95e10",
                          "diesel",
                          "e85",
                          "ron91",
                          "ron95e5",
                          "ron100",
                          "dieselGtl",
                          "dieselB7",
                          "dieselB15",
                          "dieselPremium",
                          "lpg",
                          "cng",
                          "lng",
                          "h2",
                          "truckDiesel",
                          "adBlue",
                          "truckAdBlue",
                          "truckDieselPremium",
                          "truckLpg",
                          "heatingOil"
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "fuelPrice\"": {
                    "lt": 1.3
                  },
                  "fuelType\"": {
                    "eq": "diesel"
                  }
                }
              },
              "pushToken": {
                "type": "string",
                "description": "PRN describing the push token. E.g. FCM token.",
                "example": "prn:fcm:token:84D31D6A-4E77-497A-BFA5-0D7E6F7342D2"
              }
            }
          }
        }
      },
      "LocationBasedApp": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type",
            "enum": [
              "locationBasedApp"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Location-based app ID",
            "example": "f106ac99-213c-4cf7-8c1b-1e841516026b"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "appType": {
                "type": "string",
                "enum": [
                  "fueling"
                ]
              },
              "title": {
                "type": "string",
                "example": "PACE Fueling App"
              },
              "subtitle": {
                "type": "string",
                "example": "Zahle bargeldlos mit der PACE Fueling App"
              },
              "logoUrl": {
                "type": "string",
                "description": "Logo URL",
                "example": "http://via.placeholder.com/200x200"
              },
              "pwaUrl": {
                "type": "string",
                "description": "Progressive web application URL. The URL satisfies the following criteria: <li>The URL responds with `text/html` on a GET request</li> <li>The response contains HTTP caching headers e.g. `Cache-Control` and `ETag`</li> <li>HTTP GET request on the URL with an `ETag` will return `304` (`Not Modified`), if the content didn't change</li> <li>If `503` (`Service Unavailable`) is returned the request should be retried later</li> <li>If `404` (`Not Found`) is returned the URL is invalidated and a new app should be requested</li>\n",
                "example": "https://cdn.example.org/pwa/fueling.html"
              },
              "androidInstantAppUrl": {
                "type": "string",
                "description": "Android instant app URL",
                "example": "https://cdn.example.org/pwa/fueling.apk"
              },
              "cache": {
                "description": "A location-based app is by default loaded on `approaching`. Some apps should be loaded in advance. They have the cache set to `preload`.\n",
                "type": "string",
                "default": "approaching",
                "enum": [
                  "approaching",
                  "preload"
                ]
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Time of LocationBasedApp creation (iso8601 without time zone)",
                "example": "2018-01-01T00:00:00"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Time of LocationBasedApp last update (iso8601 without time zone)",
                "example": "2018-06-01T00:00:00"
              },
              "deletedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Time of LocationBasedApp deletion (iso8601 without time zone)",
                "example": "2018-12-01T00:00:00"
              }
            }
          }
        }
      },
      "LocationBasedApps": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LocationBasedApp"
        }
      },
      "LocationBasedAppWithRefs": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type",
            "enum": [
              "locationBasedAppWithRefs"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Location-based app ID",
            "example": "f106ac99-213c-4cf7-8c1b-1e841516026b"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "appType": {
                "type": "string",
                "enum": [
                  "fueling"
                ]
              },
              "title": {
                "type": "string",
                "example": "PACE Fueling App"
              },
              "subtitle": {
                "type": "string",
                "example": "Zahle bargeldlos mit der PACE Fueling App"
              },
              "logoUrl": {
                "type": "string",
                "description": "Logo URL",
                "example": "http://via.placeholder.com/200x200"
              },
              "pwaUrl": {
                "type": "string",
                "description": "Progressive web application URL. The URL satisfies the following criteria: <li>The URL responds with `text/html` on a GET request</li> <li>The response contains HTTP caching headers e.g. `Cache-Control` and `ETag`</li> <li>HTTP GET request on the URL with an `ETag` will return `304` (`Not Modified`), if the content didn't change</li> <li>If `503` (`Service Unavailable`) is returned the request should be retried later</li> <li>If `404` (`Not Found`) is returned the URL is invalidated and a new app should be requested</li>\n",
                "example": "https://cdn.example.org/pwa/fueling.html"
              },
              "androidInstantAppUrl": {
                "type": "string",
                "description": "Android instant app URL",
                "example": "https://cdn.example.org/pwa/fueling.apk"
              },
              "cache": {
                "description": "A location-based app is by default loaded on `approaching`. Some apps should be loaded in advance. They have the cache set to `preload`.\n",
                "type": "string",
                "default": "approaching",
                "enum": [
                  "approaching",
                  "preload"
                ]
              },
              "references": {
                "type": "array",
                "description": "References are PRNs to external and internal resources that are related to the query",
                "items": {
                  "type": "string"
                },
                "example": [
                  "prn:poi:gas-stations:24841a1c-39bd-422d-9164-d420e000243b"
                ]
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Time of LocationBasedApp creation (iso8601 without time zone)",
                "example": "2018-01-01T00:00:00"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Time of LocationBasedApp last update (iso8601 without time zone)",
                "example": "2018-06-01T00:00:00"
              },
              "deletedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Time of LocationBasedApp deletion (iso8601 without time zone)",
                "example": "2018-12-01T00:00:00"
              }
            }
          }
        }
      },
      "LocationBasedAppsWithRefs": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LocationBasedAppWithRefs"
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "category"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string",
                "example": "pm"
              },
              "fieldName": {
                "type": "string",
                "example": "paymentMethods"
              },
              "available": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "unavailable": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Categories": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Category"
        }
      },
      "FuelPrice": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Fuel price",
            "enum": [
              "fuelPrice"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Fuel Price ID",
            "example": "2a1319c3-c136-495d-b59a-47b3246d08af"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fuelType": {
                "$ref": "#/components/schemas/Fuel"
              },
              "price": {
                "description": "per liter",
                "type": "number",
                "format": "decimal",
                "example": 1.379
              },
              "currency": {
                "$ref": "#/components/schemas/currency"
              },
              "productName": {
                "type": "string",
                "example": "Super E10"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Time of FuelPrices last update iso8601 with microseconds UTC",
                "example": "2020-01-01T00:00:00"
              }
            }
          }
        }
      },
      "FuelPriceResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FuelPrice"
          }
        }
      },
      "GasStation": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gasStation"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Gas Station ID",
            "example": "d7101f72-a672-453c-9d36-d5809ef0ded6"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number",
                "format": "float",
                "example": 49.013
              },
              "longitude": {
                "type": "number",
                "format": "float",
                "example": 8.425
              },
              "stationName": {
                "type": "string",
                "example": "PACE Station"
              },
              "brand": {
                "type": "string",
                "example": "Total"
              },
              "address": {
                "type": "object",
                "properties": {
                  "street": {
                    "type": "string",
                    "example": "Haid-und-Neu-Str."
                  },
                  "houseNo": {
                    "type": "string",
                    "example": "18"
                  },
                  "postalCode": {
                    "type": "string",
                    "example": "76131"
                  },
                  "city": {
                    "type": "string",
                    "example": "Karlsruhe"
                  },
                  "countryCode": {
                    "type": "string",
                    "example": "DE",
                    "description": "Country code in as specified in ISO 3166-1."
                  }
                }
              },
              "contact": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "Max"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Mustermann"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "m",
                      "f",
                      "o"
                    ],
                    "example": "m"
                  },
                  "email": {
                    "type": "string",
                    "example": "max.mustermann@pace.de"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": "+49-175-5559-722"
                  },
                  "faxNumber": {
                    "type": "string",
                    "example": "+49-175-5559-723"
                  }
                }
              },
              "openingHours": {
                "$ref": "#/components/schemas/CommonOpeningHours"
              },
              "postalServices": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "dhl",
                    "dhlPackstation",
                    "dpd",
                    "gls",
                    "hermes",
                    "post",
                    "ups"
                  ]
                },
                "example": [
                  "gls",
                  "dhl"
                ]
              },
              "services": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "carWash",
                    "freeWifi",
                    "gasBottleRefill",
                    "gasStationAttendant",
                    "laundryService",
                    "lotto",
                    "oilService",
                    "paceConnectedFueling",
                    "screenWashWater",
                    "selfServiceCarWash",
                    "truckWash",
                    "twentyFourHoursFueling",
                    "twentyFourHoursShopping",
                    "tyreAir",
                    "tyreService",
                    "vacuum",
                    "wifi",
                    "workshop"
                  ]
                },
                "example": [
                  "wifi",
                  "tyreAir"
                ]
              },
              "shopGoods": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "adBlue",
                    "contactLenses",
                    "crushedIce",
                    "flowers",
                    "vignette",
                    "lubricants"
                  ]
                },
                "example": null
              },
              "loyaltyPrograms": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "deutschlandCard",
                    "payback",
                    "shellClubsmart",
                    "totalClub"
                  ]
                },
                "example": [
                  "payback"
                ]
              },
              "food": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "bakery",
                    "bistro",
                    "cafe",
                    "restaurant",
                    "takeaway"
                  ]
                },
                "example": [
                  "restaurant",
                  "bakery"
                ]
              },
              "amenities": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "atm",
                    "disabilityFriendly",
                    "shop",
                    "shower",
                    "toilet",
                    "tollTerminal",
                    "carParking",
                    "truckParking",
                    "truckSuitable",
                    "unmanned",
                    "paymentTerminal",
                    "motel"
                  ]
                },
                "example": [
                  "atm",
                  "truckParking"
                ]
              },
              "paymentMethods": {
                "type": "array",
                "example": [
                  "sepaDirectDebit",
                  "visa"
                ],
                "items": {
                  "type": "string",
                  "enum": [
                    "americanExpress",
                    "applyPay",
                    "aralKomfort",
                    "aviaCard",
                    "barclays",
                    "bayWaCard",
                    "cash",
                    "dinersClub",
                    "dkv",
                    "essoCard",
                    "essoVoucher",
                    "euroshell",
                    "ffCard",
                    "girocard",
                    "googlePay",
                    "hemMycard",
                    "jetCard",
                    "logPay",
                    "maestro",
                    "masterCard",
                    "novofleet",
                    "pacePay",
                    "paypal",
                    "routex",
                    "sepaDirectDebit",
                    "starFleetCard",
                    "tndCard",
                    "totalCard",
                    "uta",
                    "visa",
                    "vPay",
                    "westfalenCard"
                  ]
                }
              },
              "priceFormat": {
                "type": "string",
                "example": "d.dds"
              },
              "references": {
                "type": "array",
                "description": "References are PRNs to external and internal resources that are represented by this poi",
                "items": {
                  "type": "string"
                },
                "example": [
                  "prn:psp:sites:010876234876238991"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "fuelPrices": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "fuelPrice"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Fuel Price ID",
                          "example": "486e1b37-10b5-4089-aa21-15dea6f0e01e"
                        }
                      }
                    }
                  }
                }
              },
              "locationBasedApps": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "locationBasedApp"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Location-based app ID",
                          "example": "819fe1f6-9056-43d4-af3f-a7a712793339"
                        }
                      }
                    }
                  }
                }
              },
              "referenceStatuses": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "referenceStatus"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Service Provider resource PRN",
                          "example": "prn:psp:sites:010876234876238991"
                        }
                      }
                    }
                  }
                }
              },
              "sucessorOf": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gasStation"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "GasStation ID which was superseded by this gas station",
                          "example": "a124aa35-8b67-2500-1113-45c8036789aa"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "GasStations": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/GasStation"
        }
      },
      "currency": {
        "type": "string",
        "enum": [
          "EUR"
        ],
        "example": "EUR"
      },
      "fuelAmountUnit": {
        "type": "string",
        "enum": [
          "Ltr"
        ],
        "example": "Ltr"
      },
      "POI": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/POIType"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "POI ID",
            "example": "f106ac99-213c-4cf7-8c1b-1e841516026b"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "countryId": {
                "$ref": "#/components/schemas/CommonCountryId"
              },
              "position": {
                "$ref": "#/components/schemas/CommonGeoJSONPoint"
              },
              "boundary": {
                "$ref": "#/components/schemas/CommonGeoJSONPolygon"
              },
              "data": {
                "description": "a JSON field containing POI specific data",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldData"
                }
              },
              "metadata": {
                "description": "a JSON field containing information about data field origin and update time",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldMetaData"
                }
              },
              "active": {
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastSeenAt": {
                "type": "string",
                "format": "date-time"
              },
              "references": {
                "type": "array",
                "description": "References are PRNs to external and internal resources that are represented by this poi",
                "items": {
                  "type": "string"
                },
                "example": [
                  "prn:psp:sites:010876234876238991"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "referenceStatuses": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "referenceStatus"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Service Provider resource PRN",
                          "example": "prn:psp:sites:010876234876238991"
                        }
                      }
                    }
                  }
                }
              },
              "sucessorOf": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gasStation"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "GasStation ID which was superseded by this gas station",
                          "example": "a124aa35-8b67-2500-1113-45c8036789aa"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "POIs": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/POI"
        }
      },
      "AppPOIsRelationships": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "pois"
                  ],
                  "description": "name of the relation type"
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "d7101f72-a672-453c-9d36-d5809ef0ded6",
                  "description": "ID of the for the referenced object"
                }
              }
            }
          }
        }
      },
      "Policy": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type",
            "enum": [
              "policies"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Policy ID",
            "example": "f106ac99-213c-4cf7-8c1b-1e841516026b"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "poiType": {
                "$ref": "#/components/schemas/POIType"
              },
              "countryId": {
                "$ref": "#/components/schemas/CommonCountryId"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Time of POI creation in (iso8601 without zone - expects UTC)",
                "example": "2018-01-01T00:00:00.00000"
              },
              "rules": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PolicyRule"
                }
              },
              "userId": {
                "type": "string",
                "format": "uuid",
                "description": "Tracks who did last change",
                "example": "f106ac99-213c-4cf7-8c1b-1e841516026b"
              }
            }
          }
        }
      },
      "Policies": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Policy"
        }
      },
      "PolicyRule": {
        "type": "object",
        "required": [
          "field",
          "priorities"
        ],
        "properties": {
          "field": {
            "$ref": "#/components/schemas/FieldName"
          },
          "priorities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyRulePriority"
            }
          }
        }
      },
      "PolicyRulePriority": {
        "type": "object",
        "required": [
          "sourceId"
        ],
        "properties": {
          "sourceId": {
            "type": "string",
            "format": "uuid",
            "description": "Tracks who did last change",
            "example": "f106ac99-213c-4cf7-8c1b-1e841516026b"
          },
          "timeToLive": {
            "type": "number",
            "default": 0,
            "description": "Time to live in seconds (in relation to other entries)"
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type",
            "enum": [
              "events"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Event ID",
            "example": "f106ac99-213c-4cf7-8c1b-1e841516026b"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "eventAt": {
                "type": "string",
                "format": "date-time"
              },
              "userId": {
                "type": "string",
                "format": "uuid",
                "description": "Tracks who did last change",
                "example": "f106ac99-213c-4cf7-8c1b-1e841516026b"
              },
              "fields": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldData"
                }
              }
            }
          }
        }
      },
      "Events": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Event"
        }
      },
      "Source": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type",
            "enum": [
              "sources"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Source ID",
            "example": "f106ac99-213c-4cf7-8c1b-1e841516026b"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "source name, unique"
              },
              "poiType": {
                "$ref": "#/components/schemas/POIType"
              },
              "schema": {
                "description": "JSON field describing the structure of the updates sent by the data source",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldName"
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "lastDataAt": {
                "description": "timestamp of last import from source",
                "type": "string",
                "format": "date-time"
              },
              "countries": {
                "type": "array",
                "description": "list of ISO-3166-1 ALPHA-2 encoded countries",
                "items": {
                  "type": "string"
                },
                "example": [
                  "de",
                  "fr",
                  "es"
                ]
              }
            }
          }
        }
      },
      "Sources": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Source"
        }
      },
      "FieldName": {
        "type": "string",
        "enum": [
          "name",
          "brand",
          "street",
          "houseNumber",
          "postCode",
          "place",
          "holidayIdentifier",
          "operatingHours",
          "fuelPrices"
        ],
        "x-valid-combinations": {
          "fuelStation": [
            "name",
            "brand",
            "street",
            "houseNumber",
            "postCode",
            "place",
            "holidayIdentifier",
            "operatingHours",
            "fuelPrices"
          ]
        }
      },
      "FieldMetaData": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/FieldName"
          },
          "SourceId": {
            "type": "string",
            "format": "uuid",
            "description": "Source ID",
            "example": "f106ac99-213c-4cf7-8c1b-1e841516026b"
          },
          "UpdatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "FieldData": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/FieldName"
          },
          "value": {
            "type": "string",
            "description": "escaped json"
          }
        }
      },
      "POIType": {
        "type": "string",
        "description": "POI type this applies to",
        "enum": [
          "GasStation",
          "SpeedCamera"
        ]
      },
      "ReferenceStatus": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type",
            "enum": [
              "referenceStatus"
            ]
          },
          "id": {
            "type": "string",
            "description": "Service Provider PRN",
            "example": "prn:psp:sites:010876234876238991"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "Availability status of the referenced resource",
                "enum": [
                  "online",
                  "offline"
                ]
              }
            }
          }
        }
      },
      "FuelType": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type",
            "enum": [
              "fuelType"
            ]
          },
          "id": {
            "type": "string",
            "description": "FuelType ID",
            "example": "f3ef9706-c406-4b11-8f4f-421ab1e651fa"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "productName": {
                "type": "string",
                "description": "Product name."
              },
              "fuelType": {
                "type": "string",
                "description": "Normalized name, i.e., converted to a fuel type."
              }
            }
          }
        }
      },
      "ReferenceStatuses": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ReferenceStatus"
        }
      },
      "RegionalPrices": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Regional prices",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type",
                  "enum": [
                    "regionalPrices"
                  ]
                },
                "id": {
                  "$ref": "#/components/schemas/Fuel"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string",
                      "example": "EUR",
                      "description": "Currency based on country"
                    },
                    "lower": {
                      "type": "number",
                      "format": "decimal",
                      "example": 1.339,
                      "description": "Price value indicator below which a price is considered cheap"
                    },
                    "upper": {
                      "type": "number",
                      "format": "decimal",
                      "example": 1.449,
                      "description": "Price value indicator after which a price is considered expensive"
                    },
                    "average": {
                      "type": "number",
                      "format": "decimal",
                      "example": 1.359,
                      "description": "Average price for this fuel type"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "DedupeRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "dedupePoi"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the POI that is considered as origin of all the other POI duplicate UUIDs",
            "example": "0c5b01d8-8dde-4d9f-be20-0865766bae6e"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "duplicates": {
                "type": "array",
                "description": "UUIDs of the duplicate POIs",
                "items": {
                  "type": "string",
                  "format": "uuid",
                  "example": "0c5b01d8-8dde-4d9f-be20-0865766bae6e"
                }
              }
            }
          }
        }
      },
      "MoveRequest": {
        "type": "object",
        "description": "Creates a new event object at lat/lng from this POI ID",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "movePoi"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the POI that is going to be moved",
            "example": "0c5b01d8-8dde-4d9f-be20-0865766bae6e"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number",
                "format": "float",
                "example": 49.013,
                "minimum": -85,
                "maximum": 85,
                "description": "Latitude in degrees"
              },
              "longitude": {
                "type": "number",
                "format": "float",
                "example": 8.425,
                "minimum": -180,
                "maximum": 180,
                "description": "Longitude in degrees"
              }
            }
          }
        }
      },
      "Fuel": {
        "type": "string",
        "description": "Fuel type for cars, based on the EU fuel marking",
        "enum": [
          "ron98",
          "ron98e5",
          "ron95e10",
          "diesel",
          "e85",
          "ron91",
          "ron95e5",
          "ron100",
          "dieselGtl",
          "dieselB7",
          "dieselPremium",
          "lpg",
          "cng",
          "lng",
          "h2",
          "truckDiesel",
          "adBlue",
          "truckAdBlue",
          "truckDieselPremium",
          "truckLpg",
          "heatingOil"
        ],
        "example": "ron95e10"
      },
      "CommonCountryId": {
        "type": "string",
        "description": "Country this policy applies to (as ISO3166Alpha2)",
        "example": "DE",
        "x-validator": [
          "ISO3166Alpha2"
        ]
      },
      "CommonGeoJSONPoint": {
        "type": "object",
        "description": "https://tools.ietf.org/html/rfc7946#section-3.1.2",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Point"
            ],
            "example": "Point"
          },
          "coordinates": {
            "$ref": "#/components/schemas/CommonLatLong"
          }
        }
      },
      "CommonGeoJSONPolygon": {
        "type": "object",
        "description": "https://tools.ietf.org/html/rfc7946#section-3.1.6; used as [bounding box](https://tools.ietf.org/html/rfc7946#section-5)",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Polygon"
            ],
            "example": "Polygon"
          },
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonLatLong"
            },
            "example": [
              [
                8.424,
                49.012
              ],
              [
                9.34,
                49.1
              ],
              [
                8.424,
                49.012
              ]
            ]
          }
        }
      },
      "CommonLatLong": {
        "type": "array",
        "description": "https://tools.ietf.org/html/rfc7946",
        "items": {
          "type": "number",
          "format": "float"
        },
        "example": [
          -71.1043443253471,
          42.3150676015829
        ]
      },
      "CommonOpeningHours": {
        "type": "object",
        "properties": {
          "timezone": {
            "type": "string",
            "description": "As defined by ISO 8601, the timezone",
            "example": "+01:00"
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "default": "open",
                  "enum": [
                    "open",
                    "close"
                  ]
                },
                "days": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "monday",
                      "tuesday",
                      "wednesday",
                      "thursday",
                      "friday",
                      "saturday",
                      "sunday"
                    ]
                  }
                },
                "timespans": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "from": {
                        "description": "relative to the specified time zone (local time)",
                        "type": "string",
                        "example": "07:30"
                      },
                      "to": {
                        "description": "relative to the specified time zone (local time)",
                        "type": "string",
                        "example": "20:30"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "example": {
          "timezone": "+01:00",
          "rules": [
            {
              "days": [
                "monday",
                "tuesday",
                "wednesday",
                "thursday",
                "friday"
              ],
              "hours": [
                {
                  "from": "06:00",
                  "to": "23:00"
                }
              ]
            },
            {
              "days": [
                "saturday"
              ],
              "hours": [
                {
                  "from": "07:00",
                  "to": "23:00"
                }
              ]
            },
            {
              "days": [
                "sunday"
              ],
              "hours": [
                {
                  "from": "07:00",
                  "to": "22:00"
                }
              ]
            }
          ]
        }
      },
      "Errors": {
        "type": "object",
        "description": "Error objects provide additional information about problems encountered while performing an operation.\n",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "A unique identifier for this particular occurrence of the problem."
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "about": {
                      "type": "string",
                      "description": "A link that leads to further details about this particular occurrence of the problem.\n"
                    }
                  }
                },
                "status": {
                  "type": "string",
                  "description": "the HTTP status code applicable to this problem, expressed as a string value.\n"
                },
                "code": {
                  "type": "string",
                  "description": "an application-specific error code, expressed as a string value.\n"
                },
                "title": {
                  "type": "string",
                  "description": "A short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.\n"
                },
                "detail": {
                  "type": "string",
                  "description": "a human-readable explanation specific to this occurrence of the problem. Like title, this field’s value can be localized.\n"
                },
                "source": {
                  "type": "object",
                  "description": "An object containing references to the source of the error.\n",
                  "properties": {
                    "pointer": {
                      "type": "string",
                      "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].\n"
                    },
                    "parameter": {
                      "type": "string",
                      "description": "A string indicating which URI query parameter caused the error.\n"
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "a meta object containing non-standard meta-information about the error.\n",
                  "properties": {},
                  "additionalProperties": true
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "The server cannot or will not process the request due to an apparent client error\n",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/Errors"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "OAuth token missing or invalid",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/Errors"
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/Errors"
            }
          }
        }
      },
      "NotAcceptable": {
        "description": "The specified Accept header is not valid",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/Errors"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/Errors"
            }
          }
        }
      },
      "UnsupportedMediaType": {
        "description": "The specified Content-Type header is not valid",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/Errors"
            }
          }
        }
      },
      "UnprocessableEntity": {
        "description": "The request was well-formed but was unable to be followed due to semantic errors.",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/Errors"
            }
          }
        }
      },
      "MovedPermanently": {
        "description": "Resource was permanently moved to new location",
        "headers": {
          "Location": {
            "type": "string"
          }
        }
      },
      "Expired": {
        "description": "Resource is expired",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/Errors"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "OIDC": {
        "type": "openIdConnect",
        "openIdConnectUrl": "https://id.pace.cloud/auth/realms/pace/.well-known/openid-configuration"
      },
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://id.pace.cloud/auth/realms/pace/protocol/openid-connect/auth",
            "tokenUrl": "https://id.pace.cloud/auth/realms/pace/protocol/openid-connect/token",
            "refreshUrl": "https://id.pace.cloud/auth/realms/pace/protocol/openid-connect/token",
            "scopes": {
              "poi:apps:create": "Create an app",
              "poi:apps:delete": "Delete an app",
              "poi:apps:read": "Get/search for an app",
              "poi:apps:update": "Change an app",
              "poi:events:read": "Get/search for events",
              "poi:gas-stations:read": "Get/search for gas stations",
              "poi:gas-stations.references:read": "Enabled additional reference data on the gas station",
              "poi:gas-stations.references:update": "Write additional reference data on the gas station",
              "poi:pois:read": "Get/search for pois",
              "poi:pois.references:read": "Enabled additional reference data on the poi",
              "poi:pois:update": "Update a poi",
              "poi:policies:create": "Create a policy",
              "poi:policies:read": "Get/search for policies",
              "poi:sources:create": "Create a source",
              "poi:sources:delete": "Delete a source",
              "poi:sources:read": "Get/search for sources",
              "poi:sources:update": "Update a source",
              "poi:subscriptions:read": "List all subscriptions",
              "poi:subscriptions:create": "Create a subscription",
              "poi:subscriptions:delete": "Delete a subscription",
              "poi:tiles:read": "Get/search for tiles"
            }
          }
        }
      },
      "DeviceID": {
        "type": "apiKey",
        "in": "header",
        "name": "Device-ID",
        "description": "Authentication using a unique device id. This is allows usage of the api without a user account. The device id has to be 32 bytes long and is best generated with a secure random function. E.g. `3b5cb427432aee46a2aa1dbad6f1c7629ec7928ce732afdd73ff7554b9c46272` generated using `openssl rand -hex 32`. The device id may not be the same across a re-install of the app. In case the device id is lost, all data stored with that device id is lost. If a device ID is not seen for a longer time period, the data may be deleted.\n"
      }
    }
  }
}
